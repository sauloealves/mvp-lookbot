// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Loja {
  id        String     @id @default(uuid())
  nome      String
  ativo     Boolean    @default(true)
  logo_url  String?
  usuarios  Usuario[]
  roupas    Roupa[]
  clientes  Cliente[]
  vendas    Venda[]
}

model Usuario {
  id         String   @id @default(uuid())
  nome       String
  email      String   @unique
  senha_hash String
  is_admin   Boolean  @default(false)
  loja_id    String
  loja       Loja     @relation(fields: [loja_id], references: [id])
}

model Cliente {
  id        String   @id @default(uuid())
  nome      String
  telefone  String
  endereco  String
  loja_id   String
  loja      Loja     @relation(fields: [loja_id], references: [id])
  vendas    Venda[]
}

model Roupa {
  id                  String   @id @default(uuid())
  descricao_curta     String
  cores_predominantes String[] 
  tom_de_pele         String?
  estilo              String?
  url                 String?
  valor               Float
  ativo               Boolean  @default(true)
  loja_id             String
  loja                Loja     @relation(fields: [loja_id], references: [id])
  itens               VendaItem[]
  imagens             ImagemRoupa[] 
}

model Venda {
  id         String       @id @default(uuid())
  data       DateTime     @default(now())
  loja_id    String
  cliente_id String
  loja       Loja         @relation(fields: [loja_id], references: [id])
  cliente    Cliente      @relation(fields: [cliente_id], references: [id])
  itens      VendaItem[]
}

model VendaItem {
  id                String   @id @default(uuid())
  venda_id          String
  roupa_id          String
  quantidade        Int
  valor_unitario    Float
  desconto_aplicado Float
  tipo              Int
  venda             Venda   @relation(fields: [venda_id], references: [id])
  roupa             Roupa    @relation(fields: [roupa_id], references: [id])
}

model ImagemRoupa {
  id       String  @id @default(uuid())
  url      String
  roupaId  String
  roupa    Roupa   @relation(fields: [roupaId], references: [id], onDelete: Cascade)  
}